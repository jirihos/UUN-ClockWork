[
    {
        "id": "d537a249a96dc0df",
        "type": "tab",
        "label": "Recieve  IoT msg > server call > log > local check > msg. stash > msg out",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76b8d7d23f0dfbb5",
        "type": "tab",
        "label": "UsersCollection update, gateway tables",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7790596fee7e9be",
        "type": "tab",
        "label": "Stashed events POST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "74d70de6eea550f9",
        "type": "tab",
        "label": "Keyboard events, stashed events, gateway tables",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "703dc2c481ddf6ab",
        "type": "tab",
        "label": "TEST FLOW",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Ideas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d70cc115667768df",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Find user in local DB",
        "style": {
            "stroke": "#ffefbf",
            "label": true,
            "fill": "#ffefbf",
            "label-position": "sw"
        },
        "nodes": [
            "99940b665d510255",
            "c886763ff525e7f5",
            "60d9f8fe0958cf50",
            "80888cdaf5d9a8b9"
        ],
        "x": 34,
        "y": 679,
        "w": 512,
        "h": 330
    },
    {
        "id": "2124c778e288492c",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Log server response",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "7a6dc751a7fc8632",
            "8d92076ea8ee2d84",
            "303311f5377ac92b",
            "9301e7d80c610b92",
            "71f7a3281684d237",
            "00b99cdb0152d857",
            "a3f26508d916884a"
        ],
        "x": 554,
<<<<<<< Updated upstream
        "y": 259,
        "w": 852,
=======
        "y": 319,
        "w": 892,
>>>>>>> Stashed changes
        "h": 190
    },
    {
        "id": "dd73acae1f72be6e",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Employee exist in local DB",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "0c47445f94556a8b",
            "12593b8dc90ac2cd",
            "6cfb1baa922fad99",
            "a16376362f98f38f"
        ],
        "x": 554,
<<<<<<< Updated upstream
        "y": 639,
        "w": 852,
=======
        "y": 839,
        "w": 892,
>>>>>>> Stashed changes
        "h": 170
    },
    {
        "id": "3ae20c15f527cdf9",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Employee does not exist in local DB",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "4be098b25860ece8",
            "a90667a04de81245"
        ],
        "x": 554,
<<<<<<< Updated upstream
        "y": 479,
        "w": 852,
=======
        "y": 719,
        "w": 892,
>>>>>>> Stashed changes
        "h": 90
    },
    {
        "id": "e167cf4c1a22efbf",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Sort server response",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "d6f9f320f897c6ee"
        ],
        "x": 34,
        "y": 351.5,
        "w": 472,
        "h": 105
    },
    {
        "id": "aeb77755ee56e845",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Recieve message, server call",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "0e63ea1d3b6cab68",
            "94a2c8b60c41d056",
            "7e09073d61ddc699",
            "2f8352811aacfd89",
            "c205155a2f3932fe",
            "404fcafe15a83f94",
            "9b354d9dba50c1d2",
            "7fc55615f6c4ce14",
            "9c933f3688f9d9a1",
            "3d15ab43c8ab519a",
            "feb1107b306b5946",
            "a84e35068f94e0c4"
        ],
        "x": 34,
<<<<<<< Updated upstream
        "y": 59,
        "w": 1372,
        "h": 170
=======
        "y": 79,
        "w": 1412,
        "h": 210
>>>>>>> Stashed changes
    },
    {
        "id": "ee274060183140ba",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Keyboard events gateway table",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "2bd43a2954daefc6",
            "2daa2cbfa085b484",
            "10186ab8cec6d099",
            "31f18681ba01a9c0",
            "4e566a1b02d91ecd"
        ],
        "x": 54,
        "y": 199,
        "w": 1432,
        "h": 82
    },
    {
        "id": "a6515923ca5b7293",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Stashed events gateway table",
        "style": {
            "label": true,
            "stroke": "#ffefbf",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "8d822c1ec888b9e2",
            "cbf7c6584f0a9148",
            "ed6e78e62f6e89b8",
            "7c551ef32e98efb6"
        ],
        "x": 54,
        "y": 79,
        "w": 1432,
        "h": 82
    },
    {
        "id": "bce0c0495c57ea31",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Display log of usersCollection update",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "996b8d311bcda11f",
            "8383109a01c9660c",
            "a787e0b9e85b6bd2",
            "fa1ef6a4075d912e"
        ],
<<<<<<< Updated upstream
        "x": 334,
        "y": 519,
=======
        "x": 634,
        "y": 539,
>>>>>>> Stashed changes
        "w": 1232,
        "h": 82
    },
    {
        "id": "4025ea06e340687a",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Display List of users ",
        "style": {
            "label": true,
            "stroke": "#ffffbf",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "42382caa7092aea9",
            "02bf3d654cefb710",
            "bace35dfe37e3ffd",
            "ba82d36c698f8a7b"
        ],
<<<<<<< Updated upstream
        "x": 334,
=======
        "x": 634,
>>>>>>> Stashed changes
        "y": 419,
        "w": 1232,
        "h": 82
    },
    {
        "id": "57ab287daac428f3",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Get/ Update list of users into local DB ",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "810f708507612442",
            "c20bc9ccb77a24e8",
            "9e354968b2f4414e",
            "c4c3270d4232f020",
            "c68bf099a6769c18",
            "879a66595b3fc576",
            "4cc52d6208e45607"
        ],
        "x": 14,
        "y": 39,
        "w": 572,
        "h": 302
    },
    {
        "id": "2dfa0fcb02146650",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Log response of\"update list of users\"",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "a7a28555fa3fc0ad",
            "20b10770f9327a5d",
            "f6d6d05d984eee08",
            "71b81da74b181148"
        ],
        "x": 634,
<<<<<<< Updated upstream
        "y": 219,
        "w": 932,
=======
        "y": 239,
        "w": 1232,
>>>>>>> Stashed changes
        "h": 122
    },
    {
        "id": "541a9b2c482b7850",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Update of list of users",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "e6c2bdfd3eba38d2",
            "437c8c3a30167bbc",
            "6fbc632079c8a472",
            "2e68e0c1a6dff21c",
            "f2cc5306a2411e0c"
        ],
        "x": 634,
        "y": 39,
        "w": 1232,
        "h": 142
    },
    {
        "id": "b834f4ef255fea59",
        "type": "group",
        "z": "d7790596fee7e9be",
        "name": "POST stashed events from collection",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "ba32127318c8a1a2",
            "984d777333c3e122",
            "3c156e2a20f86e79",
            "2d93e9c6fd6f7b32",
            "5e2003d9c1ad71a8",
            "991c1e6feedfa4b1",
            "dbacf1335303f72f",
            "cddaf976743603fb"
        ],
        "x": 34,
        "y": 39,
        "w": 1472,
        "h": 150
    },
    {
        "id": "7607e31cccc8cd69",
        "type": "group",
        "z": "d7790596fee7e9be",
        "name": "Sort server response",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "e1c1870ce0bd1278"
        ],
        "x": 34,
        "y": 211.5,
        "w": 472,
        "h": 105
    },
    {
        "id": "a9d1e52d72a110cb",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Header Date/ Time + theme (https://flows.nodered.org)",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "36b6ae18aa8a04e1",
<<<<<<< Updated upstream
            "85965edc.72971"
=======
            "68f82fd49ed5ef19"
>>>>>>> Stashed changes
        ],
        "x": 54,
        "y": 699,
        "w": 347,
<<<<<<< Updated upstream
        "h": 162
=======
        "h": 122
>>>>>>> Stashed changes
    },
    {
        "id": "8b1fb312af5f5207",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Non existent users keyboard events",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "48939d5169b3dc1d",
            "9224049ff9507c2b",
            "e23e54d43474feff",
            "d3f22ad954efe27c",
            "bd464a090c494d7e",
            "4ad305dfaa268fb4",
            "77c4966462c4c94b"
        ],
        "x": 54,
        "y": 519,
        "w": 1432,
        "h": 142
    },
    {
        "id": "3528e7c07d677b4d",
        "type": "group",
        "z": "d7790596fee7e9be",
        "name": "Delete posted events, refused events move to non existent users keyboard events",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "3674db40486b4944",
            "504edbf8d8bcac20",
            "65db048f5948f060",
            "2890d95a38a9ccd7",
            "4e39b4c98e846c34",
            "058d5b19765351d2",
            "add31e4973f08134",
            "4f8f2918bd55aceb"
        ],
        "x": 574,
        "y": 219,
        "w": 932,
        "h": 270
    },
    {
        "id": "1bc801493ded71d2",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "TTL userListUpdateCollection",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "b288e13cb75f301f",
            "92deceb80e14e7ff",
            "62d4ae1e2798fc85",
            "2ec89de0bc1fde04",
            "02e6cffbf5cb6392",
            "9af2e759ee4e3b5a",
            "421842dd816509fc"
        ],
<<<<<<< Updated upstream
        "x": 334,
        "y": 639,
=======
        "x": 634,
        "y": 659,
>>>>>>> Stashed changes
        "w": 1232,
        "h": 150
    },
    {
        "id": "b6a8575e2f75783e",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "TTL keyboardEventsCollection",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "748fcf2c4586b526",
            "a970f8a143ae4fc1",
            "da301eb6488cac64",
            "0c6587995b5b6ac2",
            "ae6b5d826aaefdbc",
            "17a74412e42e603f",
            "8b72e5f5770c578a"
        ],
        "x": 54,
        "y": 319,
        "w": 1432,
        "h": 150
    },
    {
<<<<<<< Updated upstream
=======
        "id": "a10b30921cdeeca4",
        "type": "group",
        "z": "703dc2c481ddf6ab",
        "name": "Arrive all users from DB set start date/ time",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "86d715285def2972",
            "5ea196e4fc4505ae",
            "3e4d599b9151175b",
            "c9b1b25e244c6b3f",
            "964bc097266931c6",
            "bcca943a5da1ce17",
            "a0361fa45e35fdda",
            "e42636be3a06d81e"
        ],
        "x": 234,
        "y": 199,
        "w": 1552,
        "h": 90
    },
    {
        "id": "e473421683d57dc0",
        "type": "group",
        "z": "703dc2c481ddf6ab",
        "name": "Leave all users from DB set start date/ time",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "37dc1e350aa11259",
            "f9bd9b9c523c512c",
            "a4791ab37a2e6fd2",
            "458f06ec24e848ed",
            "344e808564720fda",
            "d18b82a922caf95d",
            "4f9ebc2f72f3169d",
            "973cf5dc42eaf43d"
        ],
        "x": 234,
        "y": 419,
        "w": 1552,
        "h": 90
    },
    {
        "id": "1650f82db34b29ba",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Terminal LED status",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "2e5a1881ab9317d7",
            "0a37d82cd78a121d",
            "a69c25e0b94337b8",
            "ad0f3f1f2b7cd7e9",
            "c14ac36e164aa888",
            "de23cc0cc57560a5"
        ],
        "x": 774,
        "y": 539,
        "w": 672,
        "h": 150
    },
    {
>>>>>>> Stashed changes
        "id": "1be85959efd6d9ef",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f18849d91eb5ebcb",
        "type": "mongodb",
        "hostname": "mongodb",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "clockwork-gateway",
        "name": ""
    },
    {
        "id": "8e8c38f3867a2f4b",
        "type": "ui_group",
        "name": "Keyboard events",
        "tab": "886cc25582355e06",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "886cc25582355e06",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1c82a9f185287f0",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9e0481318c1e8033",
        "type": "ui_group",
        "name": "Stashed keyboard events",
        "tab": "91d4b4ec44690f96",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": true,
        "className": ""
    },
    {
        "id": "af810a62dae6c015",
        "type": "ui_group",
        "name": "Update list of users DB gateway",
        "tab": "ac261bd52cf295e5",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ac261bd52cf295e5",
        "type": "ui_tab",
        "name": "List of users",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "24fc504cdf00f66a",
        "type": "ui_group",
        "name": "List of users",
        "tab": "ac261bd52cf295e5",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": true,
        "className": ""
    },
    {
        "id": "91d4b4ec44690f96",
        "type": "ui_tab",
        "name": "List of STASHED events and NON existent users",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2429789384419515",
        "type": "ui_group",
        "name": "Non existent users keyboard events",
        "tab": "91d4b4ec44690f96",
        "order": 2,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "2a745e6b.07df92",
        "type": "ui_group",
        "name": "Default",
        "tab": "e63bce2d.68925",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e63bce2d.68925",
        "type": "ui_tab",
<<<<<<< Updated upstream
        "name": "Denon",
=======
        "name": "TEST",
>>>>>>> Stashed changes
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
<<<<<<< Updated upstream
=======
        "id": "700e0299.f39d8c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
>>>>>>> Stashed changes
        "id": "0e63ea1d3b6cab68",
        "type": "mqtt in",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "topic": "node/code-terminal:0/user",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1be85959efd6d9ef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "94a2c8b60c41d056"
            ]
        ]
    },
    {
        "id": "94a2c8b60c41d056",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "Filter msg === 5 ",
        "func": "if (typeof msg.payload === 'string' && msg.payload.length ===5){\n    return [msg, null]; // Send first output\n} else {\n    return [null, msg]; // Send second output\n    \n}\n    ",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7e09073d61ddc699"
            ],
            [
                "404fcafe15a83f94",
                "feb1107b306b5946"
            ]
        ]
    },
    {
        "id": "7e09073d61ddc699",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "set msg.payload ",
        "func": "let payloadString = msg.payload.toString();\n\nlet user = parseInt(payloadString.substring(0, 4));\nlet action = payloadString.substring(4);\nlet actionName;\n\nswitch (action) {\n    case 'A':\n        actionName = 'arrival';\n        break;\n    case 'L':\n        actionName = 'leave';\n        break;\n     case 'D':\n        actionName = 'doctor';\n        break;\n        case 'H':\n        actionName = 'holiday';\n        break;    \n    default:\n        actionName = 'unknown';\n}\n\nmsg.payload = \n{\n    \"timestamp\": new Date().toISOString(),\n    \"employeeCode\": user,\n    \"type\": actionName\n};\n\nlet url = env.get('BACKEND_URL');\nmsg.url = url + \"/api/event/create\";\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 180,
        "wires": [
            [
                "c205155a2f3932fe"
            ]
        ]
    },
    {
        "id": "0c47445f94556a8b",
        "type": "mongodb out",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1140,
<<<<<<< Updated upstream
        "y": 680,
=======
        "y": 880,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "2f8352811aacfd89",
        "type": "http request",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "x-api-key",
                "valueType": "msg",
                "valueValue": "api_key"
            }
        ],
<<<<<<< Updated upstream
        "x": 1310,
        "y": 180,
=======
        "x": 1350,
        "y": 240,
>>>>>>> Stashed changes
        "wires": [
            [
                "d6f9f320f897c6ee"
            ]
        ]
    },
    {
        "id": "c205155a2f3932fe",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "Set context/ Set header - api key",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "api_key",
                "pt": "msg",
                "to": "api_key",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 180,
        "wires": [
            [
                "9b354d9dba50c1d2"
            ]
        ]
    },
    {
        "id": "99940b665d510255",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 720,
        "wires": [
            [
                "60d9f8fe0958cf50"
            ]
        ]
    },
    {
        "id": "7a6dc751a7fc8632",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "Log server response",
        "func": "var knownUser = (flow.get(\"userPayload\").length === 0);\n\nmsg.payload = {\n    \"inputPayload\": flow.get(\"payload\"),\n    \"statusCode\": msg.statusCode,\n    \"payload\": msg.payload,\n    \"userInfo\": flow.get(\"userPayload\"),\n    \"_tod\": msg._tod\n};\n\nswitch (msg.payload.statusCode) {\n    case 200:\n        msg.payload.status = \"OK\";\n        break;\n    case \"ECONNREFUSED\":\n        if (!knownUser) {\n            msg.payload.status = \"STASHED (connection error)\";\n        } else {\n            msg.payload.status = \"DENIED (connection error)\";\n        }\n        break;\n    default:\n        msg.payload.status = msg.payload.payload.error.code;\n        break;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
<<<<<<< Updated upstream
        "y": 300,
=======
        "y": 360,
>>>>>>> Stashed changes
        "wires": [
            [
                "8d92076ea8ee2d84"
            ]
        ]
    },
    {
        "id": "8d92076ea8ee2d84",
        "type": "mongodb out",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "keyboardEventsCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
<<<<<<< Updated upstream
        "x": 1170,
        "y": 300,
=======
        "x": 1210,
        "y": 360,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "c886763ff525e7f5",
        "type": "mongodb in",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "usersCollection",
        "operation": "find",
        "x": 260,
        "y": 840,
        "wires": [
            [
                "80888cdaf5d9a8b9"
            ]
        ]
    },
    {
        "id": "60d9f8fe0958cf50",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "find id in usersCollection ",
        "func": "var employeeCode = msg.payload.employeeCode;\n\nmsg.payload = {code:employeeCode};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "c886763ff525e7f5"
            ]
        ]
    },
    {
        "id": "80888cdaf5d9a8b9",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "Is user with id in usersCollection  ?",
        "func": "if (msg.payload.length === 0) {\n    return [ msg, null ];\n} else {\n    return [ null, msg ];\n};",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 960,
        "wires": [
            [
                "a90667a04de81245"
            ],
            [
                "6cfb1baa922fad99",
                "a16376362f98f38f"
            ]
        ]
    },
    {
        "id": "404fcafe15a83f94",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Wrong entry",
        "name": "Wrong entry",
<<<<<<< Updated upstream
        "x": 150,
        "y": 160,
=======
        "x": 370,
        "y": 240,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "4be098b25860ece8",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "3ae20c15f527cdf9",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": " ACCESS DENIED (locally)",
<<<<<<< Updated upstream
        "x": 1260,
        "y": 520,
=======
        "x": 1300,
        "y": 760,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "12593b8dc90ac2cd",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "USER CHECKED OK (locally)",
<<<<<<< Updated upstream
        "x": 1250,
        "y": 760,
=======
        "x": 1290,
        "y": 960,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "a90667a04de81245",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "3ae20c15f527cdf9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ACCESS DENIED (locally)",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.led",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 760,
        "wires": [
            [
                "4be098b25860ece8",
                "c14ac36e164aa888"
            ]
        ]
    },
    {
        "id": "6cfb1baa922fad99",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "USER CHECKED OK (locally)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 960,
        "wires": [
            [
                "12593b8dc90ac2cd",
                "0a37d82cd78a121d"
            ]
        ]
    },
    {
        "id": "303311f5377ac92b",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "USER CHECKED OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 420,
        "wires": [
            [
                "9301e7d80c610b92",
                "0a37d82cd78a121d"
            ]
        ]
    },
    {
        "id": "9301e7d80c610b92",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "USER CHECKED OK",
<<<<<<< Updated upstream
        "x": 1280,
        "y": 360,
=======
        "x": 1320,
        "y": 420,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "71f7a3281684d237",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ACCES DENIED",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload.led",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 460,
        "wires": [
            [
                "00b99cdb0152d857",
                "c14ac36e164aa888"
            ]
        ]
    },
    {
        "id": "00b99cdb0152d857",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "ACCESS DENIED",
<<<<<<< Updated upstream
        "x": 1290,
        "y": 400,
=======
        "x": 1330,
        "y": 460,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "a16376362f98f38f",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 880,
        "wires": [
            [
                "0c47445f94556a8b"
            ]
        ]
    },
    {
        "id": "d6f9f320f897c6ee",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "e167cf4c1a22efbf",
        "name": "response switch 1:200 2:EmployeeCodeNotFound 3: else",
        "func": "if (msg.statusCode === 200) { // ok\n    return [msg, null, null];\n\n} else if (msg?.payload?.error?.code === \"EmployeeCodeNotFound\") { // bad request\n    return [null, msg, null];\n   \n} else { // error\n    return [null, null, msg];\n};\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 400,
        "wires": [
            [
                "303311f5377ac92b",
                "a3f26508d916884a"
            ],
            [
                "71f7a3281684d237",
                "a3f26508d916884a"
            ],
            [
                "99940b665d510255",
                "a3f26508d916884a"
            ]
        ]
    },
    {
        "id": "9b354d9dba50c1d2",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "Get user by id",
        "func": "var employeeCode = msg.payload.employeeCode;\n\nmsg.payload = { code: employeeCode };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "7fc55615f6c4ce14"
            ]
        ]
    },
    {
        "id": "7fc55615f6c4ce14",
        "type": "mongodb in",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "usersCollection",
        "operation": "find",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "9c933f3688f9d9a1"
            ]
        ]
    },
    {
        "id": "9c933f3688f9d9a1",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "userPayload",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 240,
        "wires": [
            [
                "2f8352811aacfd89"
            ]
        ]
    },
    {
        "id": "a3f26508d916884a",
        "type": "ttl-set",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "ttl": "48",
        "ttlType": "num",
        "units": "Hours",
        "unitsType": "select",
        "nodeName": "TTL  set 48h",
        "x": 650,
<<<<<<< Updated upstream
        "y": 300,
=======
        "y": 360,
>>>>>>> Stashed changes
        "wires": [
            [
                "7a6dc751a7fc8632"
            ]
        ]
    },
    {
<<<<<<< Updated upstream
=======
        "id": "2e5a1881ab9317d7",
        "type": "mqtt out",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "",
        "topic": "node/code-terminal:0/led/-/set/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 1280,
        "y": 580,
        "wires": []
    },
    {
        "id": "0a37d82cd78a121d",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "Set LED OK",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 580,
        "wires": [
            [
                "a69c25e0b94337b8"
            ]
        ]
    },
    {
        "id": "a69c25e0b94337b8",
        "type": "delay",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "2e5a1881ab9317d7"
            ]
        ]
    },
    {
        "id": "ad0f3f1f2b7cd7e9",
        "type": "mqtt out",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "",
        "topic": "node/code-terminal:0/led/-/set/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 1280,
        "y": 640,
        "wires": []
    },
    {
        "id": "c14ac36e164aa888",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "Set LED denied",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 640,
        "wires": [
            [
                "de23cc0cc57560a5"
            ]
        ]
    },
    {
        "id": "de23cc0cc57560a5",
        "type": "delay",
        "z": "d537a249a96dc0df",
        "g": "1650f82db34b29ba",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1050,
        "y": 640,
        "wires": [
            [
                "ad0f3f1f2b7cd7e9"
            ]
        ]
    },
    {
        "id": "3d15ab43c8ab519a",
        "type": "mqtt out",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "topic": "node/code-terminal:0/led/-/set/state",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 1040,
        "y": 120,
        "wires": []
    },
    {
        "id": "feb1107b306b5946",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "Set LED denied",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "a84e35068f94e0c4"
            ]
        ]
    },
    {
        "id": "a84e35068f94e0c4",
        "type": "delay",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "pauseType": "delay",
        "timeout": "800",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 790,
        "y": 120,
        "wires": [
            [
                "3d15ab43c8ab519a"
            ]
        ]
    },
    {
>>>>>>> Stashed changes
        "id": "810f708507612442",
        "type": "inject",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "Every 10 min get list of users",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "c68bf099a6769c18"
            ]
        ]
    },
    {
        "id": "c20bc9ccb77a24e8",
        "type": "http request",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "x-api-key",
                "valueType": "msg",
                "valueValue": "api_key"
            }
        ],
        "x": 130,
        "y": 300,
        "wires": [
            [
                "9e354968b2f4414e"
            ]
        ]
    },
    {
        "id": "9e354968b2f4414e",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "response 200 1. out, else 2.",
        "func": "if (msg.statusCode === 200){\n    return [msg, null]; // Send first output\n} else {\n    return [null, msg]; // Send second output\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 300,
        "wires": [
            [
                "a7a28555fa3fc0ad",
                "2e68e0c1a6dff21c",
                "f2cc5306a2411e0c",
                "a787e0b9e85b6bd2",
                "bace35dfe37e3ffd"
            ],
            [
                "f6d6d05d984eee08",
                "a787e0b9e85b6bd2",
                "bace35dfe37e3ffd"
            ]
        ]
    },
    {
        "id": "e6c2bdfd3eba38d2",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "mongodb": "f18849d91eb5ebcb",
        "name": "Remove list",
        "collection": "usersCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1770,
        "y": 80,
        "wires": []
    },
    {
        "id": "437c8c3a30167bbc",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "add users to usersCollection",
        "func": "try {\n    msg.users = JSON.parse(msg.payload);\n\n    if (msg.users && Array.isArray(msg.users.items)) {\n        msg.payload = msg.users.items;\n        return msg;\n    } else {\n        node.error(\"Invalid users array.\");\n    }\n} catch (e) {\n    node.error(\"Error parsing JSON: \" + e.message);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "6fbc632079c8a472"
            ]
        ]
    },
    {
        "id": "6fbc632079c8a472",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "mongodb": "f18849d91eb5ebcb",
        "name": "Insert users",
        "collection": "usersCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1770,
        "y": 140,
        "wires": []
    },
    {
        "id": "a7a28555fa3fc0ad",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "name": "Log user list update SUCESS",
        "func": "msg.payload = {\n    \"timestamp\": new Date().toISOString(),\n    \"update\": \"SUCCESFULL\",\n    \"msg\": \"OK\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
<<<<<<< Updated upstream
        "y": 260,
=======
        "y": 280,
>>>>>>> Stashed changes
        "wires": [
            [
                "71b81da74b181148"
            ]
        ]
    },
    {
        "id": "20b10770f9327a5d",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "userListUpdateCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "insert",
<<<<<<< Updated upstream
        "x": 1330,
        "y": 280,
=======
        "x": 1630,
        "y": 300,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "c4c3270d4232f020",
        "type": "ui_button",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "group": "af810a62dae6c015",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "GET LIST OF USERS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 160,
        "wires": [
            [
                "879a66595b3fc576"
            ]
        ]
    },
    {
        "id": "c68bf099a6769c18",
        "type": "ui_button",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "group": "24fc504cdf00f66a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "GET LIST OF USERS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "c4c3270d4232f020"
            ]
        ]
    },
    {
        "id": "996b8d311bcda11f",
        "type": "ui_table",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "group": "af810a62dae6c015",
        "name": "Update list of users DB gateway",
        "order": 0,
        "width": "14",
        "height": "10",
        "columns": [
            {
                "field": "payload.timestamp",
                "title": "Timestamp",
                "width": "26%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.update",
                "title": "Update statuss",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.msg",
                "title": "Message",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
<<<<<<< Updated upstream
        "x": 1410,
        "y": 560,
=======
        "x": 1710,
        "y": 580,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "8383109a01c9660c",
        "type": "mongodb in",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "userListUpdateCollection",
        "operation": "find",
<<<<<<< Updated upstream
        "x": 950,
        "y": 560,
=======
        "x": 1250,
        "y": 580,
>>>>>>> Stashed changes
        "wires": [
            [
                "996b8d311bcda11f"
            ]
        ]
    },
    {
        "id": "42382caa7092aea9",
        "type": "ui_table",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "group": "24fc504cdf00f66a",
        "name": "List of users in gateway DB",
        "order": 2,
        "width": "11",
        "height": "10",
        "columns": [
            {
                "field": "code",
                "title": "Employee ID",
                "width": "23%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "firstName",
                "title": "First name",
                "width": "23%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "lastName",
                "title": "Last name",
                "width": "23%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "departmentId",
                "title": "Department ID",
                "width": "31%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
<<<<<<< Updated upstream
        "x": 1420,
=======
        "x": 1720,
>>>>>>> Stashed changes
        "y": 460,
        "wires": []
    },
    {
        "id": "02bf3d654cefb710",
        "type": "mongodb in",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "usersCollection",
        "operation": "find",
<<<<<<< Updated upstream
        "x": 920,
=======
        "x": 1220,
>>>>>>> Stashed changes
        "y": 460,
        "wires": [
            [
                "42382caa7092aea9"
            ]
        ]
    },
    {
        "id": "f6d6d05d984eee08",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "name": "Log user list update FAIL",
        "func": "msg.payload = {\n    \"timestamp\": new Date().toISOString(),\n    \"update\": \"NOT SUCCESFULL\",\n    \"msg\": msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
<<<<<<< Updated upstream
        "y": 300,
=======
        "y": 320,
>>>>>>> Stashed changes
        "wires": [
            [
                "71b81da74b181148"
            ]
        ]
    },
    {
        "id": "2e68e0c1a6dff21c",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "Remove all users in usersCollection",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 80,
        "wires": [
            [
                "e6c2bdfd3eba38d2"
            ]
        ]
    },
    {
        "id": "f2cc5306a2411e0c",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "437c8c3a30167bbc"
            ]
        ]
    },
    {
        "id": "bace35dfe37e3ffd",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
<<<<<<< Updated upstream
        "x": 420,
=======
        "x": 720,
>>>>>>> Stashed changes
        "y": 460,
        "wires": [
            [
                "ba82d36c698f8a7b"
            ]
        ]
    },
    {
        "id": "a787e0b9e85b6bd2",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
<<<<<<< Updated upstream
        "x": 420,
        "y": 560,
=======
        "x": 720,
        "y": 580,
>>>>>>> Stashed changes
        "wires": [
            [
                "fa1ef6a4075d912e"
            ]
        ]
    },
    {
        "id": "ba82d36c698f8a7b",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "name": "Sort by employeeCode",
        "func": "msg.sort = { 'code': 1 }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 600,
=======
        "x": 900,
>>>>>>> Stashed changes
        "y": 460,
        "wires": [
            [
                "02bf3d654cefb710"
            ]
        ]
    },
    {
        "id": "71b81da74b181148",
        "type": "ttl-set",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "ttl": "10",
        "ttlType": "num",
        "units": "Hours",
        "unitsType": "select",
        "nodeName": "TTL  set 10h",
        "x": 1030,
<<<<<<< Updated upstream
        "y": 280,
=======
        "y": 300,
>>>>>>> Stashed changes
        "wires": [
            [
                "20b10770f9327a5d"
            ]
        ]
    },
    {
        "id": "b288e13cb75f301f",
        "type": "ttl-check",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
        "throwErrors": false,
        "killNoTod": false,
        "outputDeaths": true,
        "outputs": 2,
        "nodeName": "TTL Check",
<<<<<<< Updated upstream
        "x": 730,
        "y": 740,
=======
        "x": 1110,
        "y": 760,
>>>>>>> Stashed changes
        "wires": [
            [],
            [
                "62d4ae1e2798fc85"
            ]
        ]
    },
    {
        "id": "92deceb80e14e7ff",
        "type": "split",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
<<<<<<< Updated upstream
        "name": "",
=======
        "name": "Split 1 by 1",
>>>>>>> Stashed changes
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
<<<<<<< Updated upstream
        "x": 430,
        "y": 740,
=======
        "x": 750,
        "y": 760,
>>>>>>> Stashed changes
        "wires": [
            [
                "2ec89de0bc1fde04"
            ]
        ]
    },
    {
        "id": "62d4ae1e2798fc85",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
        "name": "Remove _id with TTL \"dead\"",
        "func": "var _id = msg._id;\n\nmsg.payload = { '_id':_id };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 960,
        "y": 740,
=======
        "x": 1340,
        "y": 760,
>>>>>>> Stashed changes
        "wires": [
            [
                "02e6cffbf5cb6392"
            ]
        ]
    },
    {
        "id": "fa1ef6a4075d912e",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "name": "Sort by timestamp",
        "func": "msg.sort = { 'payload.timestamp': -1 }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 610,
        "y": 560,
=======
        "x": 910,
        "y": 580,
>>>>>>> Stashed changes
        "wires": [
            [
                "8383109a01c9660c"
            ]
        ]
    },
    {
        "id": "2ec89de0bc1fde04",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
<<<<<<< Updated upstream
        "name": "Set msg",
=======
        "name": "Set msg _id & _tod",
>>>>>>> Stashed changes
        "func": "msg = {\n   \"_id\":  msg.payload._id,\n   \"_tod\": msg.payload._tod\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 560,
        "y": 740,
=======
        "x": 930,
        "y": 760,
>>>>>>> Stashed changes
        "wires": [
            [
                "b288e13cb75f301f"
            ]
        ]
    },
    {
        "id": "02e6cffbf5cb6392",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
        "mongodb": "f18849d91eb5ebcb",
<<<<<<< Updated upstream
        "name": "",
=======
        "name": "REMOVE by _id userListUpdateCollection",
>>>>>>> Stashed changes
        "collection": "userListUpdateCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
<<<<<<< Updated upstream
        "x": 1330,
        "y": 740,
=======
        "x": 1680,
        "y": 760,
>>>>>>> Stashed changes
        "wires": []
    },
    {
        "id": "9af2e759ee4e3b5a",
        "type": "mongodb in",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
        "mongodb": "f18849d91eb5ebcb",
<<<<<<< Updated upstream
        "name": "",
        "collection": "userListUpdateCollection",
        "operation": "find",
        "x": 810,
        "y": 680,
=======
        "name": "GET userListUpdateCollection",
        "collection": "userListUpdateCollection",
        "operation": "find",
        "x": 1170,
        "y": 700,
>>>>>>> Stashed changes
        "wires": [
            [
                "92deceb80e14e7ff"
            ]
        ]
    },
    {
        "id": "421842dd816509fc",
        "type": "inject",
        "z": "76b8d7d23f0dfbb5",
        "g": "1bc801493ded71d2",
        "name": "1x hour check TTL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
<<<<<<< Updated upstream
        "x": 470,
        "y": 680,
=======
        "x": 770,
        "y": 700,
>>>>>>> Stashed changes
        "wires": [
            [
                "9af2e759ee4e3b5a"
            ]
        ]
    },
    {
<<<<<<< Updated upstream
=======
        "id": "879a66595b3fc576",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "set msg.payload ",
        "func": "let url = env.get('BACKEND_URL');\nmsg.url = url + \"/api/employee/list\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 160,
        "wires": [
            [
                "4cc52d6208e45607"
            ]
        ]
    },
    {
        "id": "4cc52d6208e45607",
        "type": "change",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "Set header - api key",
        "rules": [
            {
                "t": "set",
                "p": "api_key",
                "pt": "msg",
                "to": "api_key",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "c20bc9ccb77a24e8"
            ]
        ]
    },
    {
>>>>>>> Stashed changes
        "id": "991c1e6feedfa4b1",
        "type": "http request",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "x-api-key",
                "valueType": "msg",
                "valueValue": "api_key"
            }
        ],
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "e1c1870ce0bd1278"
            ]
        ]
    },
    {
        "id": "e1c1870ce0bd1278",
        "type": "function",
        "z": "d7790596fee7e9be",
        "g": "7607e31cccc8cd69",
        "name": "response switch 1:200 2:EmployeeCodeNotFound 3: else",
        "func": "if (msg.statusCode === 200) { // ok\n    return [msg, null, null];\n\n} else if (msg?.payload?.error?.code === \"EmployeeCodeNotFound\") { // bad request\n    return [null, msg, null];\n   \n} else { // error\n    return [null, null, msg];\n};\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 260,
        "wires": [
            [
                "3674db40486b4944"
            ],
            [
                "2890d95a38a9ccd7"
            ],
            []
        ]
    },
    {
        "id": "ba32127318c8a1a2",
        "type": "inject",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "5e2003d9c1ad71a8"
            ]
        ]
    },
    {
        "id": "984d777333c3e122",
        "type": "mongodb in",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "operation": "find",
        "x": 1240,
        "y": 80,
        "wires": [
            [
                "3c156e2a20f86e79"
            ]
        ]
    },
    {
        "id": "3674db40486b4944",
        "type": "function",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "name": "Delete msg by id",
        "func": "var _id = msg.originalMsg._id;\n\nmsg.payload = {_id};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 260,
        "wires": [
            [
                "add31e4973f08134"
            ]
        ]
    },
    {
        "id": "504edbf8d8bcac20",
        "type": "mongodb out",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "nonExistentUsersEnymoreCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1240,
        "y": 320,
        "wires": []
    },
    {
        "id": "3c156e2a20f86e79",
        "type": "split",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "Split array into objects",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 180,
        "y": 140,
        "wires": [
            [
                "dbacf1335303f72f"
            ]
        ]
    },
    {
        "id": "2d93e9c6fd6f7b32",
        "type": "change",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "Remove _id",
        "rules": [
            {
                "t": "set",
                "p": "api_key",
                "pt": "msg",
                "to": "api_key",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload._id",
                "pt": "msg",
                "to": "\\",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "cddaf976743603fb"
            ]
        ]
    },
    {
        "id": "5e2003d9c1ad71a8",
        "type": "ui_button",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "",
        "group": "9e0481318c1e8033",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "POST stashed events to server",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "984d777333c3e122"
            ]
        ]
    },
    {
        "id": "65db048f5948f060",
        "type": "ui_toast",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Stashed events 'Server not responding'",
        "name": "Stashed events 'Server not responding'",
        "x": 760,
        "y": 440,
        "wires": []
    },
    {
        "id": "2890d95a38a9ccd7",
        "type": "change",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "originalMsg",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 320,
        "wires": [
            [
                "058d5b19765351d2",
                "4f8f2918bd55aceb"
            ]
        ]
    },
    {
        "id": "4e39b4c98e846c34",
        "type": "mongodb out",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1240,
        "y": 380,
        "wires": []
    },
    {
        "id": "058d5b19765351d2",
        "type": "function",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "name": "Delete msg by id",
        "func": "var _id = msg.originalMsg._id;\n\nmsg.payload = {_id};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 380,
        "wires": [
            [
                "4e39b4c98e846c34"
            ]
        ]
    },
    {
        "id": "add31e4973f08134",
        "type": "mongodb out",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1240,
        "y": 260,
        "wires": []
    },
    {
        "id": "dbacf1335303f72f",
        "type": "change",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "Original msg",
        "rules": [
            {
                "t": "set",
                "p": "originalMsg",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "2d93e9c6fd6f7b32"
            ]
        ]
    },
    {
        "id": "4f8f2918bd55aceb",
        "type": "change",
        "z": "d7790596fee7e9be",
        "g": "3528e7c07d677b4d",
        "name": "Remove _id",
        "rules": [
            {
                "t": "set",
                "p": "payload._id",
                "pt": "msg",
                "to": "\\",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "504edbf8d8bcac20"
            ]
        ]
    },
    {
        "id": "cddaf976743603fb",
        "type": "function",
        "z": "d7790596fee7e9be",
        "g": "b834f4ef255fea59",
        "name": "Set API",
        "func": "let url = env.get('BACKEND_URL');\nmsg.url = url + \"/api/event/create\";\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 140,
        "wires": [
            [
                "991c1e6feedfa4b1"
            ]
        ]
    },
    {
        "id": "8d822c1ec888b9e2",
        "type": "ui_table",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "group": "9e0481318c1e8033",
        "name": "Stashed keyboard events",
        "order": 1,
        "width": "10",
        "height": "12",
        "columns": [
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "employeeCode",
                "title": "Employee ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Action",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1350,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cbf7c6584f0a9148",
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "name": "Refresh Table 5s todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "7c551ef32e98efb6"
            ]
        ]
    },
    {
        "id": "ed6e78e62f6e89b8",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "operation": "find",
        "x": 860,
        "y": 120,
        "wires": [
            [
                "8d822c1ec888b9e2"
            ]
        ]
    },
    {
        "id": "2bd43a2954daefc6",
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "Refresh Table 5s todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "2daa2cbfa085b484"
            ]
        ]
    },
    {
        "id": "2daa2cbfa085b484",
        "type": "ui_button",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "",
        "group": "8e8c38f3867a2f4b",
        "order": 1,
        "width": "18",
        "height": "1",
        "passthru": true,
        "label": "Refresh todo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "31f18681ba01a9c0"
            ]
        ]
    },
    {
        "id": "10186ab8cec6d099",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "keyboardEventsCollection",
        "operation": "find",
        "x": 970,
        "y": 240,
        "wires": [
            [
                "4e566a1b02d91ecd"
            ]
        ]
    },
    {
        "id": "31f18681ba01a9c0",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "Sort by timestamp desc.",
        "func": "msg.sort = { 'inputPayload.timestamp': -1}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 240,
        "wires": [
            [
                "10186ab8cec6d099"
            ]
        ]
    },
    {
        "id": "4e566a1b02d91ecd",
        "type": "ui_table",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "group": "8e8c38f3867a2f4b",
        "name": "Keyboard events",
        "order": 2,
<<<<<<< Updated upstream
        "width": "24",
=======
        "width": "18",
>>>>>>> Stashed changes
        "height": "12",
        "columns": [
            {
                "field": "inputPayload.timestamp",
                "title": "Timestamp",
                "width": "20%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "inputPayload.employeeCode",
                "title": "Employee ID",
                "width": "10%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "userInfo.0.lastName",
                "title": "Surname",
                "width": "11%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "userInfo.0.firstName",
                "title": "Name",
                "width": "11%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "userInfo.0.departmentId",
                "title": "Department",
                "width": "14%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "inputPayload.type",
                "title": "Action",
                "width": "10%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Server response",
                "width": "25%",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1370,
        "y": 240,
        "wires": []
    },
    {
        "id": "36b6ae18aa8a04e1",
        "type": "ui_template",
        "z": "74d70de6eea550f9",
        "g": "a9d1e52d72a110cb",
        "group": "8e8c38f3867a2f4b",
        "name": "Clock Toolbar",
        "order": 3,
        "width": "0",
        "height": "0",
        "format": "<script id=\"titleScript\" type=\"text/javascript\">\n\n$(function() {\n    if($('.md-toolbar-tools').length != 0){\n        loadClock();\n    }else setTimeout(loadClock, 500)\n});\n\nfunction loadClock(){\n    $('#clock').remove();\n    var toolbar = $('.md-toolbar-tools');\n    \n    var div = $('<div/>');\n    var p = $('<p/ id=\"clock\">');\n    \n    div.append(p);\n    div[0].style.margin = '5px 5px 5px auto';\n    toolbar.append(div);\n\n    function displayTitle(lh) {\n        p.text(lh); \n    }\n    \n    function upTime() {\n        var d = new Date();\n        p.text(d.toLocaleString());\n    }\n\n    if(document.clockInterval){ \n            clearInterval(document.clockInterval);\n            document.clockInterval = null;\n    }\n        \n    document.clockInterval = setInterval(upTime,1000);\n}\n\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 160,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7c551ef32e98efb6",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "name": "Sort by timestamp desc.",
        "func": "msg.sort = { 'timestamp': -1 }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 120,
        "wires": [
            [
                "ed6e78e62f6e89b8"
            ]
        ]
    },
    {
        "id": "48939d5169b3dc1d",
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "77c4966462c4c94b"
            ]
        ]
    },
    {
        "id": "9224049ff9507c2b",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "name": "Sort by timestamp desc.",
        "func": "msg.sort = { 'inputPayload.timestamp': -1}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 560,
        "wires": [
            [
                "e23e54d43474feff"
            ]
        ]
    },
    {
        "id": "e23e54d43474feff",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "nonExistentUsersEnymoreCollection",
        "operation": "find",
<<<<<<< Updated upstream
        "x": 500,
=======
        "x": 340,
>>>>>>> Stashed changes
        "y": 620,
        "wires": [
            [
                "d3f22ad954efe27c"
            ]
        ]
    },
    {
        "id": "d3f22ad954efe27c",
        "type": "ui_table",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "group": "2429789384419515",
        "name": "Non existent users keyboard events",
        "order": 2,
        "width": "18",
        "height": "12",
        "columns": [
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "employeeCode",
                "title": "Employee ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Action",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 920,
        "y": 620,
        "wires": [
            [
                "4ad305dfaa268fb4"
            ]
        ]
    },
    {
        "id": "bd464a090c494d7e",
        "type": "mongodb out",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "nonExistentUsersEnymoreCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1220,
        "y": 560,
        "wires": []
    },
    {
        "id": "4ad305dfaa268fb4",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "name": "function 4",
        "func": "var timestamp = msg.payload.timestamp;\n\nmsg.payload = { timestamp };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 620,
        "wires": [
            [
                "bd464a090c494d7e"
            ]
        ]
    },
    {
        "id": "748fcf2c4586b526",
        "type": "ttl-check",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "throwErrors": false,
        "killNoTod": false,
        "outputDeaths": true,
        "outputs": 2,
        "nodeName": "TTL Check",
<<<<<<< Updated upstream
        "x": 470,
=======
        "x": 630,
>>>>>>> Stashed changes
        "y": 420,
        "wires": [
            [],
            [
                "da301eb6488cac64"
            ]
        ]
    },
    {
        "id": "a970f8a143ae4fc1",
        "type": "split",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
<<<<<<< Updated upstream
        "name": "",
=======
        "name": "Split 1 by 1",
>>>>>>> Stashed changes
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
<<<<<<< Updated upstream
        "x": 150,
=======
        "x": 170,
>>>>>>> Stashed changes
        "y": 420,
        "wires": [
            [
                "0c6587995b5b6ac2"
            ]
        ]
    },
    {
        "id": "da301eb6488cac64",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "name": "Remove _id with TTL \"dead\"",
        "func": "var _id = msg._id;\n\nmsg = { '_id':_id };\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 700,
=======
        "x": 900,
>>>>>>> Stashed changes
        "y": 420,
        "wires": [
            [
                "ae6b5d826aaefdbc"
            ]
        ]
    },
    {
        "id": "0c6587995b5b6ac2",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
<<<<<<< Updated upstream
        "name": "Set msg",
=======
        "name": "Set msg _id & _tod",
>>>>>>> Stashed changes
        "func": "msg = {\n   \"_id\":  msg.payload._id,\n   \"_tod\": msg.payload._tod\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
<<<<<<< Updated upstream
        "x": 300,
=======
        "x": 410,
>>>>>>> Stashed changes
        "y": 420,
        "wires": [
            [
                "748fcf2c4586b526"
            ]
        ]
    },
    {
        "id": "ae6b5d826aaefdbc",
        "type": "mongodb out",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "mongodb": "f18849d91eb5ebcb",
<<<<<<< Updated upstream
        "name": "",
=======
        "name": "DELETE by _id keyboardEventsCollection",
>>>>>>> Stashed changes
        "collection": "keyboardEventsCollection",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
<<<<<<< Updated upstream
        "x": 1250,
=======
        "x": 1300,
>>>>>>> Stashed changes
        "y": 420,
        "wires": []
    },
    {
        "id": "17a74412e42e603f",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "mongodb": "f18849d91eb5ebcb",
<<<<<<< Updated upstream
        "name": "",
        "collection": "keyboardEventsCollection",
        "operation": "find",
        "x": 610,
=======
        "name": "GET keyboardEventsCollection",
        "collection": "keyboardEventsCollection",
        "operation": "find",
        "x": 450,
>>>>>>> Stashed changes
        "y": 360,
        "wires": [
            [
                "a970f8a143ae4fc1"
            ]
        ]
    },
    {
        "id": "8b72e5f5770c578a",
<<<<<<< Updated upstream
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "name": "1x hour check TTL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "17a74412e42e603f"
            ]
        ]
    },
    {
        "id": "85965edc.72971",
        "type": "ui_template",
        "z": "74d70de6eea550f9",
        "g": "a9d1e52d72a110cb",
        "group": "2a745e6b.07df92",
        "name": "Dashboard Theme : Modern Dark",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            --background: #212529;\n            --on-background: white;\n            --surface: #2d3136;\n            --on-surface: white;\n            --primary: var(--nr-dashboard-widgetColor);\n            --on-primary: white;\n            --secondary: var(--nr-dashboard-groupTextColor);\n            --accent: red;\n            --radius-s: 8px;\n            --font-weight-m: 300;\n            --font-weight-m: 500;\n            --font-weight-l: 700;\n            --space-s: 8px;\n            --space-m: 16px;\n            --space-l: 32px;\n        }\n\n        body.nr-dashboard-theme {\n            background-color: var(--background);\n            font-family: 'Montserrat', sans-serif;\n        }\n        .nr-dashboard-theme ui-card-panel {\n            background-color: var(--background);\n            border: 0;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button {\n            background-color: var(--primary);\n            border-radius: var(--radius-s);\n            padding: 8px !important;\n            line-height: inherit;\n            font-weight: var(--font-weight-l);\n            color: var(--on-primary);\n        }\n        .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            white-space: pre-line;\n        }\n        \n        .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n                margin-bottom: 8px;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n            background-color: var(--secondary);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            background-color: var(--surface);\n        }\n        md-card.md-default-theme, md-card {\n            border-radius: var(--radius-s);\n        }\n        .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n            font-weight: var(--font-weight-l) !important;      \n        }\n        .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n            font-weight: var(--font-weight-l);  \n            text-transform: capitalize;\n            color: var(--on-background);\n        }\n        .nr-dashboard-cardpanel > p {\n            margin-left: 0;\n            padding-left: 16px;\n        }\n        body.nr-dashboard-theme md-toolbar {\n            background-color: var(--surface);\n        }\n        .md-default-theme .md-datepicker-calendar, .md-datepicker-calendar,\n        .md-default-theme .md-calendar, .md-calendar{\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .md-default-theme .md-datepicker-calendar-pane, .md-datepicker-calendar-pane{\n            border: 0;\n        }\n        .md-default-theme .md-calendar-month-label md-icon, .md-calendar-month-label md-icon, .md-default-theme .md-datepicker-input, .md-datepicker-input {\n            color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-numeric .value {\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value, .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n            border-top-color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-sidenav {\n            background-color: var(--surface);\n        }\n        md-list-item._md-button-wrap > div.md-button:first-child, md-list-item .md-list-item-inner {\n            background-color: var(--surface);\n        }\n    </style>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 220,
        "y": 820,
        "wires": [
            []
        ],
        "icon": "node-red-dashboard/ui_colour_picker.png",
        "info": "# Modern Dark Theme for node-red-dashboard\n\nInspired by Victor Lucachi with his [Node Red Dashboard Concept](https://dribbble.com/shots/10356530-Node-Red-Dashboard-Concept) on Dribbble. Thank you for your work.\n\n## Customize\n\n1. Go on dashboard customisation tab (At the right of Debug Console).\n2. Select the style `Dark`.\n3. Pick the color you want. Example `#66B5F8`\n\n## Buttons\n\nUse `2x2` size for buttons with icon and text on the screenshot"
    },
    {
        "id": "77c4966462c4c94b",
        "type": "ui_button",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "name": "",
        "group": "2429789384419515",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "DELETE selected events",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 560,
        "wires": [
            [
                "9224049ff9507c2b"
            ]
        ]
    },
    {
        "id": "d87ac70e8db63cda",
=======
>>>>>>> Stashed changes
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "b6a8575e2f75783e",
        "name": "1x hour check TTL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 360,
        "wires": [
            [
                "17a74412e42e603f"
            ]
        ]
    },
    {
        "id": "77c4966462c4c94b",
        "type": "ui_button",
        "z": "74d70de6eea550f9",
        "g": "8b1fb312af5f5207",
        "name": "",
        "group": "2429789384419515",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "DELETE selected events",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 560,
        "wires": [
            [
                "9224049ff9507c2b"
            ]
        ]
    },
    {
        "id": "68f82fd49ed5ef19",
        "type": "ui_template",
        "z": "74d70de6eea550f9",
        "g": "a9d1e52d72a110cb",
        "group": "2a745e6b.07df92",
        "name": "Dashboard Theme : Modern Dark",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "    <div>\n    <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@300;500;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            --background: #212529;\n            --on-background: white;\n            --surface: #2d3136;\n            --on-surface: white;\n            --primary: var(--nr-dashboard-widgetColor);\n            --on-primary: white;\n            --secondary: var(--nr-dashboard-groupTextColor);\n            --accent: red;\n            --radius-s: 8px;\n            --font-weight-m: 300;\n            --font-weight-m: 500;\n            --font-weight-l: 700;\n            --space-s: 8px;\n            --space-m: 16px;\n            --space-l: 32px;\n        }\n\n        body.nr-dashboard-theme {\n            background-color: var(--background);\n            font-family: 'Montserrat', sans-serif;\n        }\n        .nr-dashboard-theme ui-card-panel {\n            background-color: var(--background);\n            border: 0;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button {\n            background-color: var(--primary);\n            border-radius: var(--radius-s);\n            padding: 8px !important;\n            line-height: inherit;\n            font-weight: var(--font-weight-l);\n            color: var(--on-primary);\n        }\n        .nr-dashboard-theme [ui-card-size=\"2x2\"].nr-dashboard-button .md-button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n            white-space: pre-line;\n        }\n        \n        .nr-dashboard-theme .nr-dashboard-button .md-button ui-icon {\n                margin-bottom: 8px;\n        }\n        .nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n            background-color: var(--secondary);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            background-color: var(--surface);\n        }\n        md-card.md-default-theme, md-card {\n            border-radius: var(--radius-s);\n        }\n        .nr-dashboard-theme .nr-dashboard-gauge-titlel {\n            font-weight: var(--font-weight-l) !important;      \n        }\n        .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n            font-weight: var(--font-weight-l);  \n            text-transform: capitalize;\n            color: var(--on-background);\n        }\n        .nr-dashboard-cardpanel > p {\n            margin-left: 0;\n            padding-left: 16px;\n        }\n        body.nr-dashboard-theme md-toolbar {\n            background-color: var(--surface);\n        }\n        .md-default-theme .md-datepicker-calendar, .md-datepicker-calendar,\n        .md-default-theme .md-calendar, .md-calendar{\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .md-default-theme .md-datepicker-calendar-pane, .md-datepicker-calendar-pane{\n            border: 0;\n        }\n        .md-default-theme .md-calendar-month-label md-icon, .md-calendar-month-label md-icon, .md-default-theme .md-datepicker-input, .md-datepicker-input {\n            color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-content md-card {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-numeric .value {\n            background-color: var(--surface);\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value, .nr-dashboard-theme .nr-dashboard-dropdown md-select .md-select-value.md-select-placeholder {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-dropdown .md-select-icon {\n            color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker md-input-container .md-input {\n            color: var(--on-surface);\n            border-color: var(--on-surface);\n        }\n        .nr-dashboard-theme .nr-dashboard-date-picker .md-datepicker-triangle-button .md-datepicker-expand-triangle {\n            border-top-color: var(--on-surface);\n        }\n        body.nr-dashboard-theme md-sidenav {\n            background-color: var(--surface);\n        }\n        md-list-item._md-button-wrap > div.md-button:first-child, md-list-item .md-list-item-inner {\n            background-color: var(--surface);\n        }\n    </style>\n</div>\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "global",
        "className": "",
        "x": 220,
        "y": 780,
        "wires": [
            []
        ],
        "icon": "node-red-dashboard/ui_colour_picker.png",
        "info": "# Modern Dark Theme for node-red-dashboard\n\nInspired by Victor Lucachi with his [Node Red Dashboard Concept](https://dribbble.com/shots/10356530-Node-Red-Dashboard-Concept) on Dribbble. Thank you for your work.\n\n## Customize\n\n1. Go on dashboard customisation tab (At the right of Debug Console).\n2. Select the style `Dark`.\n3. Pick the color you want. Example `#66B5F8`\n\n## Buttons\n\nUse `2x2` size for buttons with icon and text on the screenshot"
    },
    {
        "id": "3e4d599b9151175b",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "Events",
        "func": "\nvar previousTimestamp = flow.get(\"previousTimestamp\") || new Date();\n\nvar userIndex = flow.get(\"userIndex\") || 0;\n\nvar userId = msg.payload.id;\n\nif (!userId) {\n    return null;\n}\n\nvar timestamp = new Date(previousTimestamp);\n\nfunction getRandomMilliseconds() {\n    return Math.floor(Math.random() * (200_000 - 5000 + 1)) + 15000;\n}\n\nmsg.payload = {\n    \"timestamp\": timestamp.toISOString(),\n    \"employeeCode\": userId,\n    \"type\": \"arrival\"\n};\n\ntimestamp.setMilliseconds(timestamp.getMilliseconds() + getRandomMilliseconds());\n\nflow.set(\"previousTimestamp\", timestamp);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 240,
        "wires": [
            [
                "c9b1b25e244c6b3f",
                "6d63d79286fada62",
                "0b2310e9cf221788"
            ]
        ]
    },
    {
        "id": "86d715285def2972",
        "type": "split",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "Split 1 by 1",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "e42636be3a06d81e"
            ]
        ]
    },
    {
        "id": "5ea196e4fc4505ae",
        "type": "mongodb in",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "mongodb": "f18849d91eb5ebcb",
        "name": "GET usersCollection",
        "collection": "usersCollection",
        "operation": "find",
        "x": 520,
        "y": 240,
        "wires": [
            [
                "a0361fa45e35fdda"
            ]
        ]
    },
    {
        "id": "c9b1b25e244c6b3f",
        "type": "delay",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1360,
        "y": 240,
        "wires": [
            [
                "964bc097266931c6"
            ]
        ]
    },
    {
        "id": "964bc097266931c6",
        "type": "change",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "previousTimestamp",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "bcca943a5da1ce17",
        "type": "delay",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "5ea196e4fc4505ae"
            ]
        ]
    },
    {
        "id": "37dc1e350aa11259",
        "type": "split",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "Split 1 by 1",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 870,
        "y": 460,
        "wires": [
            [
                "458f06ec24e848ed"
            ]
        ]
    },
    {
        "id": "f9bd9b9c523c512c",
        "type": "mongodb in",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "mongodb": "f18849d91eb5ebcb",
        "name": "GET usersCollection",
        "collection": "usersCollection",
        "operation": "find",
        "x": 500,
        "y": 460,
        "wires": [
            [
                "973cf5dc42eaf43d"
            ]
        ]
    },
    {
        "id": "a4791ab37a2e6fd2",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "Events",
        "func": "\nvar previousTimestamp = flow.get(\"previousTimestamp1\") || new Date();\n\nvar userIndex = flow.get(\"userIndex\") || 0;\n\nvar userId = msg.payload.id;\n\nif (!userId) {\n    return null;\n}\n\nvar timestamp = new Date(previousTimestamp);\n\n//  random milliseconds between 5000 and 15000\nfunction getRandomMilliseconds() {\n    return Math.floor(Math.random() * (200_000 - 5000 + 1)) + 15000;\n}\n\nmsg.payload = {\n    \"timestamp\": timestamp.toISOString(),\n    \"employeeCode\": userId,\n    \"type\": \"leave\"\n};\n\ntimestamp.setMilliseconds(timestamp.getMilliseconds() + getRandomMilliseconds());\n\nflow.set(\"previousTimestamp1\", timestamp);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 460,
        "wires": [
            [
                "344e808564720fda",
                "6d63d79286fada62",
                "0b2310e9cf221788"
            ]
        ]
    },
    {
        "id": "458f06ec24e848ed",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "Set msg _id",
        "func": "var id = (msg.payload.code);\n\nmsg.payload = {\n   \"id\":  id\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 460,
        "wires": [
            [
                "a4791ab37a2e6fd2"
            ]
        ]
    },
    {
        "id": "344e808564720fda",
        "type": "delay",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1380,
        "y": 460,
        "wires": [
            [
                "d18b82a922caf95d"
            ]
        ]
    },
    {
        "id": "d18b82a922caf95d",
        "type": "change",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "previousTimestamp1",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4f9ebc2f72f3169d",
        "type": "delay",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "f9bd9b9c523c512c"
            ]
        ]
    },
    {
        "id": "a0361fa45e35fdda",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "Sort rnd",
        "func": "\nfunction shuffleArray(array) {\n   \n    function compareRandom(a, b) {\n        return Math.random() - 0.5;\n    }\n    \n    array.sort(compareRandom);\n    return array;\n}\n\nvar inputArray = msg.payload; \n\nvar shuffledArray = shuffleArray(inputArray);\n\nmsg.payload = shuffledArray;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "86d715285def2972"
            ]
        ]
    },
    {
        "id": "973cf5dc42eaf43d",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "e473421683d57dc0",
        "name": "Sort rnd",
        "func": "\nfunction shuffleArray(array) {\n    \n    function compareRandom(a, b) {\n        return Math.random() - 0.5;\n    }\n\n    array.sort(compareRandom);\n    return array;\n}\n\nvar inputArray = msg.payload; \n\nvar shuffledArray = shuffleArray(inputArray);\n\nmsg.payload = shuffledArray;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 460,
        "wires": [
            [
                "37dc1e350aa11259"
            ]
        ]
    },
    {
        "id": "6138466ad9d300ab",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "name": "Set date time",
        "func": "// Get the original timestamp from the payload\nlet originalTimestamp = new Date(msg.payload);\n\nlet year = originalTimestamp.getFullYear();\nlet month = originalTimestamp.getMonth();\nlet date = originalTimestamp.getDate();\n\nlet newTimestamp = new Date(year, month, date, 7, 0, 0);\nlet newTimestamp1 = new Date(year, month, date, 15, 0, 0);\n\nlet utcTimestamp = new Date(newTimestamp.getTime() - newTimestamp.getTimezoneOffset() * 60000);\nlet utcTimestamp1 = new Date(newTimestamp1.getTime() - newTimestamp1.getTimezoneOffset() * 60000);\n\nflow.set('previousTimestamp', utcTimestamp.toISOString());\nflow.set('previousTimestamp1', utcTimestamp1.toISOString());\n\n//msg.payload = utcTimestamp.toISOString();\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "bcca943a5da1ce17",
                "4f9ebc2f72f3169d"
            ]
        ]
    },
    {
        "id": "0b2310e9cf221788",
        "type": "mongodb out",
        "z": "703dc2c481ddf6ab",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1540,
        "y": 320,
        "wires": []
    },
    {
        "id": "6d63d79286fada62",
        "type": "debug",
        "z": "703dc2c481ddf6ab",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "c8dc967a95966515",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "name": "function 5",
        "func": "\nconst dateString = msg.payload;\n\nconst date = new Date(dateString);\n\nconst dayOfMonth = date.getUTCDate();\n\nconst formattedDay = dayOfMonth.toString().padStart(2, '0');\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 360,
        "wires": [
            [
                "6138466ad9d300ab"
            ]
        ]
    },
    {
        "id": "a7f3dac2d7b542f9",
        "type": "ui_date_picker",
        "z": "703dc2c481ddf6ab",
        "name": "",
        "label": "date",
        "group": "2a745e6b.07df92",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 130,
        "y": 360,
        "wires": [
            [
                "c8dc967a95966515"
            ]
        ]
    },
    {
        "id": "e42636be3a06d81e",
        "type": "function",
        "z": "703dc2c481ddf6ab",
        "g": "a10b30921cdeeca4",
        "name": "Set msg _id",
        "func": "var id = (msg.payload.code);\n\nmsg.payload = {\n   \"id\":  id\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "3e4d599b9151175b"
            ]
        ]
    },
    {
        "id": "afda953f5c974e93",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1be85959efd6d9ef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "afb0369c1244ceda"
            ]
        ]
    },
    {
        "id": "afb0369c1244ceda",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "a2e4e61e46401397",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "9d5824a429730b28"
            ]
        ]
    },
    {
        "id": "9d5824a429730b28",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/nodes/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "6dcf6125abb8951b",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "f76371fcaec11ec0"
            ]
        ]
    },
    {
        "id": "f76371fcaec11ec0",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/pairing-mode/start",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "a832de492bcbf595",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "09a0dbbfc06fe9fa"
            ]
        ]
    },
    {
        "id": "09a0dbbfc06fe9fa",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/pairing-mode/stop",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 470,
        "y": 280,
        "wires": []
    },
    {
        "id": "11ece0c0373003d5",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "dd03fc639e1179b3"
            ]
        ]
    },
    {
        "id": "dd03fc639e1179b3",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/nodes/purge",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "7ecfbdc3ca34f211",
        "type": "file in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "filename": "/run/secrets/terminal_api_key",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 360,
        "y": 440,
        "wires": [
            [
                "a5d844aacdfdd2ac"
            ]
        ]
    },
    {
        "id": "cda5acc378081260",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "On start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "7ecfbdc3ca34f211"
            ]
        ]
    },
    {
        "id": "a5d844aacdfdd2ac",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "api_key",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "dbb98daa7c298a05",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "e08953d02ae6cb07"
            ]
        ]
    },
    {
        "id": "1abbe845999c9e55",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 500,
        "wires": []
    },
    {
        "id": "e08953d02ae6cb07",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "api_key",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 500,
        "wires": [
            [
                "1abbe845999c9e55"
            ]
        ]
    }
]
[
    {
        "id": "d537a249a96dc0df",
        "type": "tab",
        "label": "Recieve  IoT msg > server call > log > local check > msg. stash > msg out",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "76b8d7d23f0dfbb5",
        "type": "tab",
        "label": "UsersCollection update, gateway tables",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "74d70de6eea550f9",
        "type": "tab",
        "label": "Keyboard events, stashed events, gateway tables",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7790596fee7e9be",
        "type": "tab",
        "label": "Stashed events POST",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Ideas",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d70cc115667768df",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Find user in local DB",
        "style": {
            "stroke": "#ffefbf",
            "label": true,
            "fill": "#ffefbf",
            "label-position": "sw"
        },
        "nodes": [
            "99940b665d510255",
            "c886763ff525e7f5",
            "60d9f8fe0958cf50",
            "80888cdaf5d9a8b9"
        ],
        "x": 34,
        "y": 339,
        "w": 492,
        "h": 330
    },
    {
        "id": "2124c778e288492c",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Log server response",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "7a6dc751a7fc8632",
            "8d92076ea8ee2d84",
            "303311f5377ac92b",
            "9301e7d80c610b92",
            "71f7a3281684d237",
            "00b99cdb0152d857"
        ],
        "x": 574,
        "y": 179,
        "w": 752,
        "h": 210
    },
    {
        "id": "dd73acae1f72be6e",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Employee exist in local DB",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "0c47445f94556a8b",
            "12593b8dc90ac2cd",
            "6cfb1baa922fad99",
            "a16376362f98f38f"
        ],
        "x": 574,
        "y": 499,
        "w": 752,
        "h": 170
    },
    {
        "id": "3ae20c15f527cdf9",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Employee does not exist in local DB",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "4be098b25860ece8",
            "a90667a04de81245"
        ],
        "x": 574,
        "y": 399,
        "w": 752,
        "h": 90
    },
    {
        "id": "e167cf4c1a22efbf",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Sort server response",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "d6f9f320f897c6ee"
        ],
        "x": 34,
        "y": 191.5,
        "w": 472,
        "h": 105
    },
    {
        "id": "aeb77755ee56e845",
        "type": "group",
        "z": "d537a249a96dc0df",
        "name": "Recieve message, server call",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffffbf",
            "label": true,
            "label-position": "sw"
        },
        "nodes": [
            "0e63ea1d3b6cab68",
            "94a2c8b60c41d056",
            "7e09073d61ddc699",
            "2f8352811aacfd89",
            "c205155a2f3932fe",
            "404fcafe15a83f94"
        ],
        "x": 34,
        "y": 39,
        "w": 1292,
        "h": 130
    },
    {
        "id": "ee274060183140ba",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Keyboard events gateway table",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "2bd43a2954daefc6",
            "2daa2cbfa085b484",
            "10186ab8cec6d099",
            "31f18681ba01a9c0",
            "4e566a1b02d91ecd"
        ],
        "x": 54,
        "y": 199,
        "w": 1332,
        "h": 82
    },
    {
        "id": "a6515923ca5b7293",
        "type": "group",
        "z": "74d70de6eea550f9",
        "name": "Stashed events gateway table",
        "style": {
            "label": true,
            "stroke": "#ffefbf",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "8d822c1ec888b9e2",
            "cbf7c6584f0a9148",
            "05d406bbbd07e06b",
            "ed6e78e62f6e89b8",
            "44aceb65fe221438"
        ],
        "x": 54,
        "y": 79,
        "w": 1332,
        "h": 82
    },
    {
        "id": "bce0c0495c57ea31",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Display log of usersCollection update",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "996b8d311bcda11f",
            "8383109a01c9660c",
            "b018baf8c5bac8ba",
            "a787e0b9e85b6bd2"
        ],
        "x": 314,
        "y": 439,
        "w": 1132,
        "h": 82
    },
    {
        "id": "4025ea06e340687a",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Display List of users ",
        "style": {
            "label": true,
            "stroke": "#ffffbf",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "42382caa7092aea9",
            "02bf3d654cefb710",
            "65d1c00f1a3aec21",
            "bace35dfe37e3ffd"
        ],
        "x": 314,
        "y": 339,
        "w": 1132,
        "h": 82
    },
    {
        "id": "57ab287daac428f3",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Get/ Update list of users into local DB ",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffffbf",
            "label": true
        },
        "nodes": [
            "810f708507612442",
            "c20bc9ccb77a24e8",
            "9e354968b2f4414e",
            "c4c3270d4232f020",
            "c68bf099a6769c18"
        ],
        "x": 14,
        "y": 39,
        "w": 572,
        "h": 282
    },
    {
        "id": "2dfa0fcb02146650",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Log response of\"update list of users\"",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "a7a28555fa3fc0ad",
            "20b10770f9327a5d",
            "f6d6d05d984eee08"
        ],
        "x": 634,
        "y": 199,
        "w": 812,
        "h": 122
    },
    {
        "id": "541a9b2c482b7850",
        "type": "group",
        "z": "76b8d7d23f0dfbb5",
        "name": "Update of list of users",
        "style": {
            "stroke": "#ffefbf",
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "e6c2bdfd3eba38d2",
            "437c8c3a30167bbc",
            "6fbc632079c8a472",
            "2e68e0c1a6dff21c",
            "f2cc5306a2411e0c"
        ],
        "x": 634,
        "y": 39,
        "w": 812,
        "h": 142
    },
    {
        "id": "1be85959efd6d9ef",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f18849d91eb5ebcb",
        "type": "mongodb",
        "hostname": "mongodb",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "clockwork-gateway",
        "name": ""
    },
    {
        "id": "8e8c38f3867a2f4b",
        "type": "ui_group",
        "name": "Keyboard events",
        "tab": "886cc25582355e06",
        "order": 1,
        "disp": true,
        "width": "13",
        "collapse": true,
        "className": ""
    },
    {
        "id": "886cc25582355e06",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1c82a9f185287f0",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "9e0481318c1e8033",
        "type": "ui_group",
        "name": "Stashed keyboard events",
        "tab": "886cc25582355e06",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": true,
        "className": ""
    },
    {
        "id": "fcc25c05bf681369",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3e5527040d40c85f",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "af810a62dae6c015",
        "type": "ui_group",
        "name": "Update list of users DB gateway",
        "tab": "ac261bd52cf295e5",
        "order": 1,
        "disp": true,
        "width": "14",
        "collapse": true,
        "className": ""
    },
    {
        "id": "ac261bd52cf295e5",
        "type": "ui_tab",
        "name": "List of users",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "24fc504cdf00f66a",
        "type": "ui_group",
        "name": "List of users",
        "tab": "ac261bd52cf295e5",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": true,
        "className": ""
    },
    {
        "id": "c91332c0.50c11",
        "type": "ui_group",
        "name": "commands",
        "tab": "379a501f.53b59",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "379a501f.53b59",
        "type": "ui_tab",
        "name": "ui-table command",
        "icon": "fa-table",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0e63ea1d3b6cab68",
        "type": "mqtt in",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "topic": "node/code-terminal:0/user",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1be85959efd6d9ef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 170,
        "y": 80,
        "wires": [
            [
                "94a2c8b60c41d056"
            ]
        ]
    },
    {
        "id": "94a2c8b60c41d056",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "Filter msg === 5 ",
        "func": "if (typeof msg.payload === 'string' && msg.payload.length ===5){\n    return [msg, null]; // Send first output\n} else {\n    return [null, msg]; // Send second output\n    \n}\n    ",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "7e09073d61ddc699"
            ],
            [
                "404fcafe15a83f94"
            ]
        ]
    },
    {
        "id": "7e09073d61ddc699",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "set msg.payload ",
        "func": "let payloadString = msg.payload.toString();\n\nlet user = parseInt(payloadString.substring(0, 4));\nlet action = payloadString.substring(4);\nlet actionName;\n\nswitch (action) {\n    case 'A':\n        actionName = 'arrival';\n        break;\n    case 'L':\n        actionName = 'leave';\n        break;\n     case 'D':\n        actionName = 'doctor';\n        break;\n        case 'H':\n        actionName = 'holiday';\n        break;    \n    default:\n        actionName = 'unknown';\n}\n\nmsg.payload = \n{\n    \"terminalId\": \"12345605692d59ee\",\n    \"timestamp\": new Date().toISOString(),\n    \"employeeCode\": user,\n    \"type\": actionName\n};\n\nmsg.headers = {};\nmsg.headers['authorization'] = '10';\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 80,
        "wires": [
            [
                "c205155a2f3932fe"
            ]
        ]
    },
    {
        "id": "0c47445f94556a8b",
        "type": "mongodb out",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1060,
        "y": 540,
        "wires": []
    },
    {
        "id": "2f8352811aacfd89",
        "type": "http request",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://host.docker.internal:3000/api/event/create",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 80,
        "wires": [
            [
                "d6f9f320f897c6ee"
            ]
        ]
    },
    {
        "id": "c205155a2f3932fe",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 80,
        "wires": [
            [
                "2f8352811aacfd89"
            ]
        ]
    },
    {
        "id": "99940b665d510255",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 380,
        "wires": [
            [
                "60d9f8fe0958cf50"
            ]
        ]
    },
    {
        "id": "7a6dc751a7fc8632",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "Log server response",
        "func": "msg.payload = {\n    \"inputPayload\":flow.get(\"payload\"),\n    \"statusCode\": msg.statusCode,\n    \"payload\": msg.payload\n};\n\nswitch (msg.payload.statusCode) {\n    case 200:\n     msg.payload.status = \"OK\"\n     break;\n    case \"ECONNREFUSED\":\n     msg.payload.status = \"CONNECTION ERROR\"\n     break;\n    default:\n     msg.payload.status = msg.payload.payload.error.code\n     break;\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 220,
        "wires": [
            [
                "8d92076ea8ee2d84"
            ]
        ]
    },
    {
        "id": "8d92076ea8ee2d84",
        "type": "mongodb out",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "keyboardEventsCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "c886763ff525e7f5",
        "type": "mongodb in",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "usersCollection",
        "operation": "find",
        "x": 260,
        "y": 500,
        "wires": [
            [
                "80888cdaf5d9a8b9"
            ]
        ]
    },
    {
        "id": "60d9f8fe0958cf50",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "find in usersCollection id",
        "func": "var employeeCode = msg.payload.employeeCode;\n\nmsg.payload = {id:employeeCode};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 380,
        "wires": [
            [
                "c886763ff525e7f5"
            ]
        ]
    },
    {
        "id": "80888cdaf5d9a8b9",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "d70cc115667768df",
        "name": "Is in usersCollection user with id ?",
        "func": "if (msg.payload.length === 0) {\n    return [ msg, null ];\n} else {\n    return [ null, msg ];\n};",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 620,
        "wires": [
            [
                "a90667a04de81245"
            ],
            [
                "6cfb1baa922fad99",
                "a16376362f98f38f"
            ]
        ]
    },
    {
        "id": "404fcafe15a83f94",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "aeb77755ee56e845",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": true,
        "className": "",
        "topic": "Wrong entry",
        "name": "Wrong entry",
        "x": 690,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4be098b25860ece8",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "3ae20c15f527cdf9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": " ACCESS DENIED (locally)",
        "x": 1180,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "12593b8dc90ac2cd",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "USER CHECKED LOCALLY OK",
        "x": 1150,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "a90667a04de81245",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "3ae20c15f527cdf9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ACCESS DENIED (locally)",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "4be098b25860ece8"
            ]
        ]
    },
    {
        "id": "6cfb1baa922fad99",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "USER CHECKED LOCALLY OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 620,
        "wires": [
            [
                "12593b8dc90ac2cd"
            ]
        ]
    },
    {
        "id": "303311f5377ac92b",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "USER CHECKED OK",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 300,
        "wires": [
            [
                "9301e7d80c610b92"
            ]
        ]
    },
    {
        "id": "9301e7d80c610b92",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "USER CHECKED OK",
        "x": 1120,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "71f7a3281684d237",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ACCES DENIED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "00b99cdb0152d857"
            ]
        ]
    },
    {
        "id": "00b99cdb0152d857",
        "type": "ui_toast",
        "z": "d537a249a96dc0df",
        "g": "2124c778e288492c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "payload",
        "name": "ACCESS DENIED",
        "x": 1110,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a16376362f98f38f",
        "type": "change",
        "z": "d537a249a96dc0df",
        "g": "dd73acae1f72be6e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 540,
        "wires": [
            [
                "0c47445f94556a8b"
            ]
        ]
    },
    {
        "id": "d6f9f320f897c6ee",
        "type": "function",
        "z": "d537a249a96dc0df",
        "g": "e167cf4c1a22efbf",
        "name": "response switch 1:200 2:EmployeeCodeNotFound 3: else",
        "func": "if (msg.statusCode === 200) { // ok\n    return [msg, null, null];\n\n} else if (msg?.payload?.error?.code === \"EmployeeCodeNotFound\") { // bad request\n    return [null, msg, null];\n   \n} else { // error\n    return [null, null, msg];\n};\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 240,
        "wires": [
            [
                "7a6dc751a7fc8632",
                "303311f5377ac92b"
            ],
            [
                "7a6dc751a7fc8632",
                "71f7a3281684d237"
            ],
            [
                "7a6dc751a7fc8632",
                "99940b665d510255"
            ]
        ]
    },
    {
        "id": "810f708507612442",
        "type": "inject",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "Every 10 min get list of users",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "c68bf099a6769c18"
            ]
        ]
    },
    {
        "id": "c20bc9ccb77a24e8",
        "type": "http request",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://host.docker.internal:8080/api/getLists",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "authorization",
                "valueType": "other",
                "valueValue": "1"
            }
        ],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "9e354968b2f4414e"
            ]
        ]
    },
    {
        "id": "9e354968b2f4414e",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "response 200 1. out, else 2.",
        "func": "if (msg.statusCode === 200){\n    return [msg, null]; // Send first output\n} else {\n    return [null, msg]; // Send second output\n}",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 280,
        "wires": [
            [
                "a7a28555fa3fc0ad",
                "2e68e0c1a6dff21c",
                "f2cc5306a2411e0c",
                "a787e0b9e85b6bd2",
                "bace35dfe37e3ffd"
            ],
            [
                "f6d6d05d984eee08",
                "a787e0b9e85b6bd2"
            ]
        ]
    },
    {
        "id": "e6c2bdfd3eba38d2",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "mongodb": "f18849d91eb5ebcb",
        "name": "Remove list",
        "collection": "usersCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 1350,
        "y": 80,
        "wires": []
    },
    {
        "id": "437c8c3a30167bbc",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "add users each to collection",
        "func": "msg.users = JSON.parse(msg.payload);\n\nif (msg.users && Array.isArray(msg.users)) {\n    \n    msg.payload = msg.users;\n    return msg;\n\n} else {\n    node.error(\"Invalid users array.\");\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 140,
        "wires": [
            [
                "6fbc632079c8a472"
            ]
        ]
    },
    {
        "id": "6fbc632079c8a472",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "mongodb": "f18849d91eb5ebcb",
        "name": "Insert users",
        "collection": "usersCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1350,
        "y": 140,
        "wires": []
    },
    {
        "id": "a7a28555fa3fc0ad",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "name": "Log user list update SUCESS",
        "func": "msg.payload = {\n    \"timestamp\": new Date().toISOString(),\n    \"update\": \"SUCCESFULL\",\n    \"msg\": \"OK\"\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 240,
        "wires": [
            [
                "20b10770f9327a5d"
            ]
        ]
    },
    {
        "id": "20b10770f9327a5d",
        "type": "mongodb out",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "userListUpdateCollection",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "c4c3270d4232f020",
        "type": "ui_button",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "group": "af810a62dae6c015",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "GET LIST OF USERS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "c20bc9ccb77a24e8"
            ]
        ]
    },
    {
        "id": "c68bf099a6769c18",
        "type": "ui_button",
        "z": "76b8d7d23f0dfbb5",
        "g": "57ab287daac428f3",
        "name": "",
        "group": "24fc504cdf00f66a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "GET LIST OF USERS",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 460,
        "y": 80,
        "wires": [
            [
                "c4c3270d4232f020"
            ]
        ]
    },
    {
        "id": "996b8d311bcda11f",
        "type": "ui_table",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "group": "af810a62dae6c015",
        "name": "Update list of users DB gateway",
        "order": 0,
        "width": "14",
        "height": "10",
        "columns": [
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "update",
                "title": "Update statuss",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "msg",
                "title": "Message",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1290,
        "y": 480,
        "wires": []
    },
    {
        "id": "8383109a01c9660c",
        "type": "mongodb in",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "userListUpdateCollection",
        "operation": "find",
        "x": 910,
        "y": 480,
        "wires": [
            [
                "996b8d311bcda11f"
            ]
        ]
    },
    {
        "id": "42382caa7092aea9",
        "type": "ui_table",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "group": "24fc504cdf00f66a",
        "name": "List of users in gateway DB",
        "order": 0,
        "width": "11",
        "height": "10",
        "columns": [
            {
                "field": "id",
                "title": "Employee ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "surname",
                "title": "Surname",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "department",
                "title": "Department",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1300,
        "y": 380,
        "wires": []
    },
    {
        "id": "02bf3d654cefb710",
        "type": "mongodb in",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "usersCollection",
        "operation": "find",
        "x": 960,
        "y": 380,
        "wires": [
            [
                "42382caa7092aea9"
            ]
        ]
    },
    {
        "id": "f6d6d05d984eee08",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "2dfa0fcb02146650",
        "name": "Log user list update FAIL",
        "func": "msg.payload = {\n    \"timestamp\": new Date().toISOString(),\n    \"update\": \"NOT SUCCESFULL\",\n    \"msg\": msg.payload\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "20b10770f9327a5d"
            ]
        ]
    },
    {
        "id": "2e68e0c1a6dff21c",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "Remove all users in usersCollection",
        "func": "msg.payload = {};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 80,
        "wires": [
            [
                "e6c2bdfd3eba38d2"
            ]
        ]
    },
    {
        "id": "f2cc5306a2411e0c",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "541a9b2c482b7850",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "437c8c3a30167bbc"
            ]
        ]
    },
    {
        "id": "b018baf8c5bac8ba",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "name": "Sort by timestamp dsc",
        "func": "msg.sort = { timestamp: -1 };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 480,
        "wires": [
            [
                "8383109a01c9660c"
            ]
        ]
    },
    {
        "id": "65d1c00f1a3aec21",
        "type": "function",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "name": "Sort by id asc",
        "func": "msg.sort = { id: 1 };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 380,
        "wires": [
            [
                "02bf3d654cefb710"
            ]
        ]
    },
    {
        "id": "bace35dfe37e3ffd",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "4025ea06e340687a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "65d1c00f1a3aec21"
            ]
        ]
    },
    {
        "id": "a787e0b9e85b6bd2",
        "type": "delay",
        "z": "76b8d7d23f0dfbb5",
        "g": "bce0c0495c57ea31",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 480,
        "wires": [
            [
                "b018baf8c5bac8ba"
            ]
        ]
    },
    {
        "id": "8d822c1ec888b9e2",
        "type": "ui_table",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "group": "9e0481318c1e8033",
        "name": "Stashed keyboard events",
        "order": 0,
        "width": "13",
        "height": "10",
        "columns": [
            {
                "field": "timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "employeeCode",
                "title": "Employee ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Action",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1250,
        "y": 120,
        "wires": []
    },
    {
        "id": "cbf7c6584f0a9148",
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "name": "Refresh Table 5s todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "05d406bbbd07e06b"
            ]
        ]
    },
    {
        "id": "05d406bbbd07e06b",
        "type": "ui_button",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "name": "",
        "group": "9e0481318c1e8033",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh todo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "44aceb65fe221438"
            ]
        ]
    },
    {
        "id": "ed6e78e62f6e89b8",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "stashedKeyboardEventsCollection",
        "operation": "find",
        "x": 880,
        "y": 120,
        "wires": [
            [
                "8d822c1ec888b9e2"
            ]
        ]
    },
    {
        "id": "f17ae95c73b4bc0e",
        "type": "debug",
        "z": "74d70de6eea550f9",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 120,
        "wires": []
    },
    {
        "id": "44aceb65fe221438",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "a6515923ca5b7293",
        "name": "Sort",
        "func": "msg.sort = { 'inputPayload.timestamp': -1}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            [
                "ed6e78e62f6e89b8"
            ]
        ]
    },
    {
        "id": "2bd43a2954daefc6",
        "type": "inject",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "Refresh Table 5s todo",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 240,
        "wires": [
            [
                "2daa2cbfa085b484"
            ]
        ]
    },
    {
        "id": "2daa2cbfa085b484",
        "type": "ui_button",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "",
        "group": "8e8c38f3867a2f4b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Refresh todo",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "31f18681ba01a9c0"
            ]
        ]
    },
    {
        "id": "10186ab8cec6d099",
        "type": "mongodb in",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "keyboardEventsCollection",
        "operation": "find",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "4e566a1b02d91ecd"
            ]
        ]
    },
    {
        "id": "31f18681ba01a9c0",
        "type": "function",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "name": "Sort",
        "func": "msg.sort = { 'inputPayload.timestamp': -1}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 240,
        "wires": [
            [
                "10186ab8cec6d099"
            ]
        ]
    },
    {
        "id": "4e566a1b02d91ecd",
        "type": "ui_table",
        "z": "74d70de6eea550f9",
        "g": "ee274060183140ba",
        "group": "8e8c38f3867a2f4b",
        "name": "Keyboard events",
        "order": 2,
        "width": "13",
        "height": "10",
        "columns": [
            {
                "field": "inputPayload.timestamp",
                "title": "Timestamp",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "inputPayload.employeeCode",
                "title": "Employee ID",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "inputPayload.type",
                "title": "Action",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "status",
                "title": "Server response",
                "width": "",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1270,
        "y": 240,
        "wires": []
    },
    {
        "id": "511ccb281833db51",
        "type": "comment",
        "z": "d7790596fee7e9be",
        "name": "POST stashed events from keyboard",
        "info": "",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "afda953f5c974e93",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "1be85959efd6d9ef",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "afb0369c1244ceda",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 60,
        "wires": []
    },
    {
        "id": "a2e4e61e46401397",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "9d5824a429730b28"
            ]
        ]
    },
    {
        "id": "9d5824a429730b28",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/nodes/get",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 450,
        "y": 160,
        "wires": []
    },
    {
        "id": "6dcf6125abb8951b",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "f76371fcaec11ec0"
            ]
        ]
    },
    {
        "id": "f76371fcaec11ec0",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/pairing-mode/start",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "a832de492bcbf595",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "09a0dbbfc06fe9fa"
            ]
        ]
    },
    {
        "id": "09a0dbbfc06fe9fa",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/pairing-mode/stop",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 470,
        "y": 280,
        "wires": []
    },
    {
        "id": "11ece0c0373003d5",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "dd03fc639e1179b3"
            ]
        ]
    },
    {
        "id": "dd03fc639e1179b3",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "gateway/usb-dongle/nodes/purge",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1be85959efd6d9ef",
        "x": 460,
        "y": 340,
        "wires": []
    },
    {
        "id": "dbe17ea55b14a173",
        "type": "mongodb out",
        "z": "f6f2187d.f17ca8",
        "mongodb": "f18849d91eb5ebcb",
        "name": "",
        "collection": "test",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "store",
        "x": 460,
        "y": 500,
        "wires": []
    },
    {
        "id": "f4d9976a02551019",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"foo\":\"bar\"}",
        "payloadType": "json",
        "x": 130,
        "y": 500,
        "wires": [
            [
                "dbe17ea55b14a173"
            ]
        ]
    },
    {
        "id": "7ecfbdc3ca34f211",
        "type": "file in",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "filename": "/run/secrets/terminal_api_key",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 340,
        "y": 680,
        "wires": [
            [
                "a5d844aacdfdd2ac"
            ]
        ]
    },
    {
        "id": "cda5acc378081260",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "On start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 680,
        "wires": [
            [
                "7ecfbdc3ca34f211"
            ]
        ]
    },
    {
        "id": "a5d844aacdfdd2ac",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "api_key",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "dbb98daa7c298a05",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "e08953d02ae6cb07"
            ]
        ]
    },
    {
        "id": "1abbe845999c9e55",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 740,
        "wires": []
    },
    {
        "id": "e08953d02ae6cb07",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "api_key",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 740,
        "wires": [
            [
                "1abbe845999c9e55"
            ]
        ]
    }
]